- name: Merge common and host-specific AUR package lists
  ansible.builtin.set_fact:
    aur_packages: "{{ aur_common_packages + aur_host_packages | default([]) }}"

- name: Create the 'aur_builder' user
  become: true
  ansible.builtin.user:
    name: aur_builder
    create_home: true
    group: wheel

- name: Allow the 'aur_builder' user to run 'sudo pacman' without a password
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: true
    mode: "0644"
    validate: visudo -cf '%s'

- name: Install paru (CI mode)
  become: true
  when: aur_user == ansible_user_id
  check_mode: false
  ansible.builtin.shell: |
    cd /tmp
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si --noconfirm
  args:
    creates: /usr/bin/paru

- name: Install paru (non-CI mode with aur_builder using sudo)
  become: true
  when: aur_user != ansible_user_id
  check_mode: false
  ansible.builtin.shell: |
    sudo -u {{ aur_user }} bash -c '
      cd /tmp &&
      git clone https://aur.archlinux.org/paru.git &&
      cd paru &&
      makepkg -si --noconfirm
    '
  args:
    creates: /usr/bin/paru

- name: Install AUR packages
  become: true
  become_user: "{{ aur_user }}"
  when: aur_user != ansible_user_id
  kewlfft.aur.aur:
    state: present
    use: paru
    name: "{{ item }}"
  loop: "{{ aur_packages }}"
  register: aur_results
  failed_when: aur_results.failed
  changed_when: aur_results.changed

- name: Show install summary
  when: aur_user != ansible_user_id
  ansible.builtin.debug:
    msg: "{{ item.item }}: {{ item.msg | default('OK') }}"
  loop: "{{ aur_results.results }}"

# - name: Merge common and host-specific AUR package lists
#   ansible.builtin.set_fact:
#     aur_packages: "{{ aur_common_packages + aur_host_packages | default([]) }}"
#
# - name: Create the 'aur_builder' user
#   become: true
#   ansible.builtin.user:
#     name: aur_builder
#     create_home: true
#     group: wheel
#
# - name: Allow the 'aur_builder' user to run 'sudo pacman without a password
#   become: true
#   ansible.builtin.lineinfile:
#     path: /etc/sudoers.d/11-install-aur_builder
#     line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
#     create: true
#     mode: "0644"
#     validate: visudo -cf '%s'
#
# - name: Install paru
#   become: true
#   become_user: "{{ aur_user }}"
#   when: aur_user != ansible_user_id
#   ansible.builtin.shell: |
#     cd /tmp
#     git clone https://aur.archlinux.org/paru.git
#     cd paru
#     makepkg -si --noconfirm
#   args:
#     creates: /usr/bin/paru
#
# - name: Install AUR packages
#   become: true
#   become_user: "{{ aur_user }}"
#   when: aur_user != ansible_user_id
#   kewlfft.aur.aur:
#     state: present
#     use: paru
#     name: "{{ item }}"
#   loop: "{{ aur_packages }}"
#   register: aur_results
#   failed_when: aur_results.failed
#   changed_when: aur_results.changed
#
# - name: Show install summary
#   ansible.builtin.debug:
#     msg: "{{ item.item }}: {{ item.msg | default('OK') }}"
#   loop: "{{ aur_results.results }}"
